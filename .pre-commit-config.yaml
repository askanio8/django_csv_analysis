repos:
  - repo: https://github.com/python-poetry/poetry
    rev: 1.8.0
    # Poetry related hooks.
    hooks:
      - id: poetry-check
        # Check poetry configuration.
        args: [--lock]
      - id: poetry-lock
        # Update poetry.lock.
        args: [--no-update]
      - id: poetry-export
        # Export requirements from poetry.lock to requirements.txt.
        args: [
            --format=requirements.txt,
            --output=requirements.txt,
            --without-hashes,
            #            --without=dev,
          ]
        #      - id: poetry-export
        #        # Export requirements from poetry.lock to requirements-dev.txt.
        #        args:
        #          [
        #            --format=requirements.txt,
        #            --output=requirements-dev.txt,
        #            --without-hashes,
        #            --only=dev,
        #          ]

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    # A collection of git hooks.
    hooks:
      - id: trailing-whitespace
        # Trims trailing whitespace.
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
        # Makes sure files end in a newline and only a newline.
        # Exclude some autogenerated files.
        exclude: |
          (?x)^(
            poetry.lock|
            requirements.*.txt
          )$
      - id: check-yaml
        # Checks that your YAML files are parseable.
      - id: check-toml
        # Attempts to load all TOML files to verify syntax.
      - id: debug-statements
        # Check for debugger imports
      - id: check-added-large-files
        # Prevent giant files from being committed.
        args: [--maxkb=500]
      #- id: no-commit-to-branch
      # No commits to master or main.
      #args: [--branch=master, --branch=main]

  - repo: https://github.com/sourcery-ai/sourcery
    rev: v1.18.0
    # Advanced refactorings for Python.
    # Hide it if you can't use it.
    hooks:
      - id: sourcery
        # The best way to use Sourcery in a pre-commit hook:
        # * review only changed lines:
        # * omit the summary
        #  args: [ --diff=git diff HEAD, --no-summary, --fix ]
        args: [--no-summary, --fix]

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    # Opinionated Code Formatter. For JS, CSS, Markdown, JSON, YAML and more.
    hooks:
      - id: prettier

  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.8.0-1
    # shfmt is a shell script formatter.
    hooks:
      - id: shfmt # prebuilt upstream executable

  - repo: https://github.com/adamchainz/django-upgrade
    rev: 1.17.0
    # Upgrade your Django projects.
    hooks:
      - id: django-upgrade
        args: [--target-version, "5.0"]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.0
    # Static type checker for Python.
    hooks:
      - id: mypy

  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.4.5
    hooks:
      #      - id: ruff
      #        # Run the linter.
      #        args: [--fix]
      - id: ruff
        # Run the linter with unsafe fixes.
        args: [--fix, --unsafe-fixes]
      - id: ruff-format
        # Run the formatter.
#  - repo: local
#    # Echo files.
#    hooks:
#      - id: echo-files
#        name: Echo files
#        entry: echo
#        language: system
#        args: ["Files:"]
#        verbose: true
